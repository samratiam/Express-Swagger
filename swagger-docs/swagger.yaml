openapi: 3.0.0

info:
  title: "Learn Express and Swagger"
  description: "A course segment about writing docs"
  version: 1.1.0
  
# servers:  #Multiple servers
#   - url: https://localhost:4000/api/v1
#     description: For localhost - Secure
#   - url: http://localhost:4000/api/v1
#     description: For localhost - Regular

# Better way
servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: "For local host - secure"
    variables:
      version:
          enum:  # Restrict the options using 'enum'
            - v1
            - v2
          # for default value
          default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes: 
    cookieAuth: 
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /sam:
    get:
      # If tags not given "default" text is shown
      tags:
        - String
      summary: returns a greet message from Sam 
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: string
                example: "myString"
        400:
          description: Bad request
        500:
          description: Internal server error 
  
  /object:
    get:
      # If tags not given "default" text is shown
      tags:
        - Object # Creates a category
      summary: returns a unique course
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object # Accept object type
                properties:  # Properties is only related to object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
              # creates an example itself if not given
        400:
          description: Bad request
        500:
          description: Internal server error 
  
  /courses:
    get:
      # If tags not given "default" text is shown
      tags:
        - Array # Creates a category
      summary: returns all courses
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array # Accept array type
                items:  
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
              # creates an example itself if not given
        400:
          description: Bad request
        500:
          description: Internal server error 

  /mycourse/{courseId}:
      get:
        tags:
          - String
        summary: returns course based on request id
        parameters:
          - name: courseId
            in: path # Send information through parameters in path  "in"
            required: true
            default: 22
            schema:
              type: string
  
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: object 
                  items:  
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      price:
                        type: number
                # creates an example itself if not given
          400:
            description: Bad request
          500:
            description: Internal server error 

  /addCourse:
      post:
        tags:
          - String
        summary: adds a new course to existing courses
        consumes:
          - application/json
        produces:
          - application/json
        requestBody:
          required: true
          content: 
            application/json:
              schema: 
                type: object # Accept object type
                properties:  # Properties is only related to object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number

       
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: boolean 
                  
                # creates an example itself if not given
          400:
            description: Bad request
          500:
            description: Internal server error 

  /courseQuery:
      get:
        tags:
          - String
        summary: using query 
        parameters:
          - name: location
            in: query
            required: true
            schema:
              type: string
              enum: [delhi, london, kathmandu]
          
          - name: device
            in: query
            required: true
            schema:
              type: string
              enum: [web, mobile]
       
        responses:
          200:
            description: All good success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    location:
                      type: string
                    device:
                      type: string 
                  
          400:
            description: Bad request
          500:
            description: Internal server error 

  /courseupload:
      post:
        tags:
          - String
        summary: uploading course image
        parameters:
          - in: header
            name: auth
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary 


        responses:
          200:
            description: All good success
                  
          400:
            description: Bad request
          500:
            description: Internal server error 



